"use strict";(self.webpackChunk_rjsf_docs=self.webpackChunk_rjsf_docs||[]).push([[5228],{876:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var r=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(t),u=a,d=p["".concat(i,".").concat(u)]||p[u]||f[u]||o;return t?r.createElement(d,s(s({ref:n},m),{},{components:t})):r.createElement(d,s({ref:n},m))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[p]="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3333:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7896),a=(t(2784),t(876));const o={},s="oneOf, anyOf, and allOf",l={unversionedId:"usage/oneof",id:"version-4.2.3/usage/oneof",title:"oneOf, anyOf, and allOf",description:"react-jsonschema-form supports custom widgets for oneOf, anyOf, and allOf.",source:"@site/versioned_docs/version-4.2.3/usage/oneof.md",sourceDirName:"usage",slug:"/usage/oneof",permalink:"/react-jsonschema-form/docs/version-4.2.3/usage/oneof",draft:!1,editUrl:"https://github.com/rjsf-team/react-jsonschema-form/tree/main/packages/docs/versioned_docs/version-4.2.3/usage/oneof.md",tags:[],version:"4.2.3",frontMatter:{},sidebar:"docs",previous:{title:"Objects",permalink:"/react-jsonschema-form/docs/version-4.2.3/usage/objects"},next:{title:"Single fields",permalink:"/react-jsonschema-form/docs/version-4.2.3/usage/single"}},i={},c=[{value:"oneOf",id:"oneof",level:2},{value:"anyOf",id:"anyof",level:2},{value:"allOf",id:"allof",level:2}],m={toc:c},p="wrapper";function f(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"oneof-anyof-and-allof"},"oneOf, anyOf, and allOf"),(0,a.kt)("p",null,"react-jsonschema-form supports custom widgets for oneOf, anyOf, and allOf."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A schema with ",(0,a.kt)("inlineCode",{parentName:"li"},"oneOf")," is valid if ",(0,a.kt)("em",{parentName:"li"},"exactly one")," of the subschemas is valid."),(0,a.kt)("li",{parentName:"ul"},"A schema with ",(0,a.kt)("inlineCode",{parentName:"li"},"anyOf")," is valid if ",(0,a.kt)("em",{parentName:"li"},"at least one")," of the subschemas is valid."),(0,a.kt)("li",{parentName:"ul"},"A schema with ",(0,a.kt)("inlineCode",{parentName:"li"},"allOf")," is valid if ",(0,a.kt)("em",{parentName:"li"},"all")," of the subschemas are valid.")),(0,a.kt)("h2",{id:"oneof"},"oneOf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'const schema = {\n    type: "object",\n    oneOf: [\n      {\n        properties: {\n          lorem: {\n            type: "string",\n          },\n        },\n        required: ["lorem"],\n      },\n      {\n        properties: {\n          ipsum: {\n            type: "string",\n          },\n        },\n        required: ["ipsum"],\n      },\n    ],\n  };\n\nrender((\n  <Form schema={schema} />\n), document.getElementById("app"));\n')),(0,a.kt)("h2",{id:"anyof"},"anyOf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'const schema = {\n    type: "object",\n    anyOf: [\n      {\n        properties: {\n          lorem: {\n            type: "string",\n          },\n        },\n        required: ["lorem"],\n      },\n      {\n        properties: {\n          lorem: {\n            type: "string",\n          },\n          ipsum: {\n            type: "string",\n          },\n        }\n      },\n    ],\n  };\n\nrender((\n  <Form schema={schema} />\n), document.getElementById("app"));\n')),(0,a.kt)("h2",{id:"allof"},"allOf"),(0,a.kt)("p",null,"When ",(0,a.kt)("inlineCode",{parentName:"p"},"allOf")," is specified in a schema, react-jsonschema-form uses the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mokkabonna/json-schema-merge-allof"},"json-schema-merge-allof")," library to merge the specified subschemas to create a combined subschema that is valid. For example, the below schema evaluates to a combined subschema of ",(0,a.kt)("inlineCode",{parentName:"p"},'{type: "boolean"}'),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'const schema = {\n  title: "Field",\n  allOf: [\n    {\n      type: ["string", "boolean"]\n    },\n    {\n      type: "boolean"\n    },\n  ],\n  };\n\nrender((\n  <Form schema={schema} />\n), document.getElementById("app"));\n')))}f.isMDXComponent=!0}}]);