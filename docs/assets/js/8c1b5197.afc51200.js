"use strict";(self.webpackChunk_rjsf_docs=self.webpackChunk_rjsf_docs||[]).push([[532],{876:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var r=a(2784);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),d=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(a),u=n,f=p["".concat(l,".").concat(u)]||p[u]||m[u]||i;return a?r.createElement(f,o(o({ref:t},c),{},{components:a})):r.createElement(f,o({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:n,o[1]=s;for(var d=2;d<i;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4654:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=a(7896),n=(a(2784),a(876));const i={},o="@rjsf/validator-ajv8 APIs",s={unversionedId:"api-reference/validator-ajv8",id:"api-reference/validator-ajv8",title:"@rjsf/validator-ajv8 APIs",description:"In RJSF version 5, the original, embedded AJV 6 validator implementation from earlier versions was extracted into its own package, @rjsf/validator-ajv6, which was immediately deprecated since AJV 6 is no longer getting maintenance updates.",source:"@site/docs/api-reference/validator-ajv8.md",sourceDirName:"api-reference",slug:"/api-reference/validator-ajv8",permalink:"/react-jsonschema-form/docs/api-reference/validator-ajv8",draft:!1,editUrl:"https://github.com/rjsf-team/react-jsonschema-form/tree/main/packages/docs/docs/api-reference/validator-ajv8.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"RJSF utility functions, constants and types",permalink:"/react-jsonschema-form/docs/api-reference/utility-functions"},next:{title:"Contributing",permalink:"/react-jsonschema-form/docs/contributing"}},l={},d=[{value:"Types",id:"types",level:2},{value:"APIs",id:"apis",level:2},{value:"customizeValidator&lt;T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any&gt;()",id:"customizevalidatort--any-s-extends-strictrjsfschema--rjsfschema-f-extends-formcontexttype--any",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"compileSchemaValidators&lt;S extends StrictRJSFSchema = RJSFSchema&gt;()",id:"compileschemavalidatorss-extends-strictrjsfschema--rjsfschema",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"createPrecompiledValidator&lt;T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any&gt;()",id:"createprecompiledvalidatort--any-s-extends-strictrjsfschema--rjsfschema-f-extends-formcontexttype--any",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4}],c={toc:d},p="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"rjsfvalidator-ajv8-apis"},"@rjsf/validator-ajv8 APIs"),(0,n.kt)("p",null,"In RJSF version 5, the original, embedded AJV 6 validator implementation from earlier versions was extracted into its own package, ",(0,n.kt)("inlineCode",{parentName:"p"},"@rjsf/validator-ajv6"),", which was immediately deprecated since AJV 6 is no longer getting maintenance updates.\nA new ",(0,n.kt)("inlineCode",{parentName:"p"},"@rjsf/validator-ajv8")," package was added that uses the AJV 8 package, including adding support for using precompiled validators.\nBelow are the exported API functions that are provided by this package.\nSee the ",(0,n.kt)("a",{parentName:"p",href:"/react-jsonschema-form/docs/usage/validation"},"Validation documentation")," for examples of using these APIs."),(0,n.kt)("h2",{id:"types"},"Types"),(0,n.kt)("p",null,"There are a few Typescript types that are exported by ",(0,n.kt)("inlineCode",{parentName:"p"},"@rjsf/validator-ajv8")," in support of the APIs."),(0,n.kt)("p",null,"These types can be found on GitHub ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/rjsf-team/react-jsonschema-form/blob/main/packages/validator-ajv8/src/types.ts"},"here"),"."),(0,n.kt)("h2",{id:"apis"},"APIs"),(0,n.kt)("h3",{id:"customizevalidatort--any-s-extends-strictrjsfschema--rjsfschema-f-extends-formcontexttype--any"},"customizeValidator<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>()"),(0,n.kt)("p",null,"Creates and returns a customized implementation of the ",(0,n.kt)("inlineCode",{parentName:"p"},"ValidatorType")," with the given customization ",(0,n.kt)("inlineCode",{parentName:"p"},"options")," if provided.\nIf a ",(0,n.kt)("inlineCode",{parentName:"p"},"localizer")," is provided, it is used to translate the messages generated by the underlying AJV validation."),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"[options={}]",": CustomValidatorOptionsType - The optional map of ",(0,n.kt)("inlineCode",{parentName:"li"},"CustomValidatorOptionsType")," options that are used to create the ",(0,n.kt)("inlineCode",{parentName:"li"},"ValidatorType")," instance"),(0,n.kt)("li",{parentName:"ul"},"[localizer]",": Localizer | undefined - If provided, is used to localize a list of Ajv ",(0,n.kt)("inlineCode",{parentName:"li"},"ErrorObject"),"s after running the form validation using AJV")),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"AJV8Validator","<","T, S, F>: The custom validator implementation resulting from the set of parameters provided")),(0,n.kt)("h3",{id:"compileschemavalidatorss-extends-strictrjsfschema--rjsfschema"},"compileSchemaValidators","<","S extends StrictRJSFSchema = RJSFSchema>()"),(0,n.kt)("p",null,"The function used to compile a schema into an output file in the form that allows it to be used as a precompiled validator.\nThe main reasons for using a precompiled validator is reducing code size, improving validation speed and, most importantly, avoiding dynamic code compilation when prohibited by a browser's Content Security Policy.\nFor more information about AJV code compilation see: ",(0,n.kt)("a",{parentName:"p",href:"https://ajv.js.org/standalone.html"},"https://ajv.js.org/standalone.html")),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"schema: S - The schema to be compiled into a set of precompiled validators functions"),(0,n.kt)("li",{parentName:"ul"},"output: string - The name of the file into which the precompiled validator functions will be generated"),(0,n.kt)("li",{parentName:"ul"},"[options={}]",": CustomValidatorOptionsType - The set of ",(0,n.kt)("inlineCode",{parentName:"li"},"CustomValidatorOptionsType")," information used to alter the AJV validator used for compiling the schema. They are the same options that are passed to the ",(0,n.kt)("inlineCode",{parentName:"li"},"customizeValidator()")," function in order to modify the behavior of the regular AJV-based validator.")),(0,n.kt)("h3",{id:"createprecompiledvalidatort--any-s-extends-strictrjsfschema--rjsfschema-f-extends-formcontexttype--any"},"createPrecompiledValidator<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>()"),(0,n.kt)("p",null,"Creates and returns a ",(0,n.kt)("inlineCode",{parentName:"p"},"ValidatorType")," interface that is implemented with a precompiled validator.\nIf a ",(0,n.kt)("inlineCode",{parentName:"p"},"localizer")," is provided, it is used to translate the messages generated by the underlying AJV validation."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"NOTE: The ",(0,n.kt)("inlineCode",{parentName:"p"},"validateFns")," parameter is an object obtained by importing from a precompiled validation file created via the ",(0,n.kt)("inlineCode",{parentName:"p"},"compileSchemaValidators()")," function.")),(0,n.kt)("h4",{id:"parameters-2"},"Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"validateFns: ValidatorFunctions - The map of the validation functions that are created by the ",(0,n.kt)("inlineCode",{parentName:"li"},"compileSchemaValidators()")," function"),(0,n.kt)("li",{parentName:"ul"},"rootSchema: S - The root schema that was used with the ",(0,n.kt)("inlineCode",{parentName:"li"},"compileSchemaValidators()")," function"),(0,n.kt)("li",{parentName:"ul"},"[localizer]",": Localizer | undefined - If provided, is used to localize a list of Ajv ",(0,n.kt)("inlineCode",{parentName:"li"},"ErrorObject"),"s after running the form validation using AJV")),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ValidatorType","<","T, S, F>: The precompiled validator implementation resulting from the set of parameters provided")))}m.isMDXComponent=!0}}]);