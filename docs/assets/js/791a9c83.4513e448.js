"use strict";(self.webpackChunk_rjsf_docs=self.webpackChunk_rjsf_docs||[]).push([[1919],{876:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(2784);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[d]="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9978:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=t(7896),o=(t(2784),t(876));const a={},i="Objects",p={unversionedId:"usage/objects",id:"version-4.2.3/usage/objects",title:"Objects",description:"Object properties",source:"@site/versioned_docs/version-4.2.3/usage/objects.md",sourceDirName:"usage",slug:"/usage/objects",permalink:"/react-jsonschema-form/docs/version-4.2.3/usage/objects",draft:!1,editUrl:"https://github.com/rjsf-team/react-jsonschema-form/tree/main/packages/docs/versioned_docs/version-4.2.3/usage/objects.md",tags:[],version:"4.2.3",frontMatter:{},sidebar:"docs",previous:{title:"Dependencies",permalink:"/react-jsonschema-form/docs/version-4.2.3/usage/dependencies"},next:{title:"oneOf, anyOf, and allOf",permalink:"/react-jsonschema-form/docs/version-4.2.3/usage/oneof"}},s={},c=[{value:"Object properties",id:"object-properties",level:2},{value:"Required properties",id:"required-properties",level:2},{value:"Specifying property order",id:"specifying-property-order",level:2},{value:"Additional properties",id:"additional-properties",level:2},{value:"<code>expandable</code> option",id:"expandable-option",level:3}],l={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"objects"},"Objects"),(0,o.kt)("h2",{id:"object-properties"},"Object properties"),(0,o.kt)("p",null,"Objects are defined with a type equal to ",(0,o.kt)("inlineCode",{parentName:"p"},"object")," and properties specified in the ",(0,o.kt)("inlineCode",{parentName:"p"},"properties")," keyword."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'const schema = {\n  "title": "My title",\n  "description": "My description",\n  "type": "object",\n  "properties": {\n    "name": {\n      "type": "string"\n    },\n    "age": {\n      "type": "number"\n    }\n  }\n};\n\nrender((\n  <Form schema={schema} />\n), document.getElementById("app"));\n')),(0,o.kt)("h2",{id:"required-properties"},"Required properties"),(0,o.kt)("p",null,"You can specify which properties are required using the ",(0,o.kt)("inlineCode",{parentName:"p"},"required")," attribute:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'const schema = {\n  "title": "My title",\n  "description": "My description",\n  "type": "object",\n  "properties": {\n    "name": {\n      "type": "string"\n    },\n    "age": {\n      "type": "number"\n    }\n  },\n  "required": ["name"]\n};\n\nrender((\n  <Form schema={schema} />\n), document.getElementById("app"));\n')),(0,o.kt)("h2",{id:"specifying-property-order"},"Specifying property order"),(0,o.kt)("p",null,"Since the order of object properties in Javascript and JSON is not guaranteed, the ",(0,o.kt)("inlineCode",{parentName:"p"},"uiSchema")," object spec allows you to define the order in which properties are rendered using the ",(0,o.kt)("inlineCode",{parentName:"p"},"ui:order")," property:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'const schema = {\n  type: "object",\n  properties: {\n    foo: {type: "string"},\n    bar: {type: "string"}\n  }\n};\n\nconst uiSchema = {\n  "ui:order": ["bar", "foo"]\n};\n\nrender((\n  <Form schema={schema}\n        uiSchema={uiSchema} />\n), document.getElementById("app"));\n')),(0,o.kt)("p",null,"If a guaranteed fixed order is only important for some fields, you can insert a wildcard ",(0,o.kt)("inlineCode",{parentName:"p"},'"*"')," item in your ",(0,o.kt)("inlineCode",{parentName:"p"},"ui:order")," definition. All fields that are not referenced explicitly anywhere in the list will be rendered at that point:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const uiSchema = {\n  "ui:order": ["bar", "*"]\n};\n')),(0,o.kt)("h2",{id:"additional-properties"},"Additional properties"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"additionalProperties")," keyword allows the user to add properties with arbitrary key names. Set this keyword equal to a schema object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'const schema = {\n  "type": "object",\n  "properties": {\n    "name": {\n      "type": "string"\n    }\n  },\n  "additionalProperties": {\n    "type": "number",\n    "enum": [1, 2, 3]\n  }\n};\n\nrender((\n  <Form schema={schema} />\n), document.getElementById("app"));\n')),(0,o.kt)("p",null,"In this way, an add button for new properties is shown by default."),(0,o.kt)("p",null,"You can also define ",(0,o.kt)("inlineCode",{parentName:"p"},"uiSchema")," options for ",(0,o.kt)("inlineCode",{parentName:"p"},"additionalProperties")," by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"additionalProperties")," attribute in the ",(0,o.kt)("inlineCode",{parentName:"p"},"uiSchema"),"."),(0,o.kt)("h3",{id:"expandable-option"},(0,o.kt)("inlineCode",{parentName:"h3"},"expandable")," option"),(0,o.kt)("p",null,"You can turn support for ",(0,o.kt)("inlineCode",{parentName:"p"},"additionalProperties")," off with the ",(0,o.kt)("inlineCode",{parentName:"p"},"expandable")," option in ",(0,o.kt)("inlineCode",{parentName:"p"},"uiSchema"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const uiSchema = {\n  "ui:options":  {\n    expandable: false\n  }\n};\n')))}u.isMDXComponent=!0}}]);